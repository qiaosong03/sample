syntax = "proto3";
package simpleMath;
option go_package = ".;pb";
import "google/api/annotations.proto";

message addRequest{
    int32 a =1;
    int32 b=2;
}

message addResponse{
    int32 res=1;
}

message subtractRequest{
    int32 a=1;
    int32 b=2;
}

message subtractResponse{
    int32 res=1;
}

message multiplyRequest{
    int32 a=1;
    int32 b=2;
}

message multiplyResponse{
    int32 res=1;
}

message divideRequest{
    int32 a=1;
    int32 b=2;
}

message divideResponse{
    int32 res=1;
}

message squareRequest{
    int32 a=1;
}

message squareResponse{
    string str=1;
}

message helloRequest{
    string name=1;
}

message helloResponse{
    string hello=1;
}

service SimpleMathService{
    rpc add(addRequest) returns (addResponse){
        option(googole.api.http)={
            get:"v1/sample/add"
            body:"*"
        };
    }
    rpc subtract(subtractRequest) returns (subtractResponse){
        option(googole.api.http)={
                get:"v1/sample/subtract"
                body:"*"
            };
    }
    rpc multiply(multiplyRequest) returns (multiplyResponse){
        option(googole.api.http)={
                    get:"v1/sample/multiply"
                    body:"*"
                };}
    rpc divide(divideRequest) returns (divideResponse){
        option(googole.api.http)={
                    get:"v1/sample/divide"
                    body:"*"
                };}
    rpc serverStream(squareRequest) returns(stream squareResponse) {
        option(googole.api.http)={
                    post:"v1/sample/serverStream"
                    body:"*"
                };}
    rpc clientStream(stream helloRequest) returns(helloResponse) {
        option(googole.api.http)={
                    post:"v1/sample/clientStream"
                    body:"*"
                };}
    rpc doubleStream(stream helloRequest) returns(stream helloResponse) {
        option(googole.api.http)={
                    post:"v1/sample/doubleStream"
                    body:"*"
                };}
}

